
# 1 "main3.c"

# 26 "/Applications/microchip/xc8/v1.43/include/htc.h"
extern const char __xc8_OPTIM_SPEED;

extern double __fpnormalize(double);


# 13 "/Applications/microchip/xc8/v1.43/include/xc8debug.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 50 "/Applications/microchip/xc8/v1.43/include/pic10f222.h"
extern volatile unsigned char INDF @ 0x000;

asm("INDF equ 00h");


typedef union {
struct {
unsigned INDF :8;
};
} INDFbits_t;
extern volatile INDFbits_t INDFbits @ 0x000;

# 70
extern volatile unsigned char TMR0 @ 0x001;

asm("TMR0 equ 01h");


typedef union {
struct {
unsigned TMR0 :8;
};
} TMR0bits_t;
extern volatile TMR0bits_t TMR0bits @ 0x001;

# 90
extern volatile unsigned char PCL @ 0x002;

asm("PCL equ 02h");


typedef union {
struct {
unsigned PCL :8;
};
} PCLbits_t;
extern volatile PCLbits_t PCLbits @ 0x002;

# 110
extern volatile unsigned char STATUS @ 0x003;

asm("STATUS equ 03h");


typedef union {
struct {
unsigned C :1;
unsigned DC :1;
unsigned Z :1;
unsigned nPD :1;
unsigned nTO :1;
unsigned :2;
unsigned GPWUF :1;
};
struct {
unsigned CARRY :1;
unsigned :1;
unsigned ZERO :1;
};
} STATUSbits_t;
extern volatile STATUSbits_t STATUSbits @ 0x003;

# 176
extern volatile unsigned char FSR @ 0x004;

asm("FSR equ 04h");


typedef union {
struct {
unsigned FSR :8;
};
} FSRbits_t;
extern volatile FSRbits_t FSRbits @ 0x004;

# 196
extern volatile unsigned char OSCCAL @ 0x005;

asm("OSCCAL equ 05h");


typedef union {
struct {
unsigned FOSC4 :1;
unsigned CAL :7;
};
struct {
unsigned :1;
unsigned CAL0 :1;
unsigned CAL1 :1;
unsigned CAL2 :1;
unsigned CAL3 :1;
unsigned CAL4 :1;
unsigned CAL5 :1;
unsigned CAL6 :1;
};
} OSCCALbits_t;
extern volatile OSCCALbits_t OSCCALbits @ 0x005;

# 267
extern volatile unsigned char GPIO @ 0x006;

asm("GPIO equ 06h");


typedef union {
struct {
unsigned GP0 :1;
unsigned GP1 :1;
unsigned GP2 :1;
unsigned GP3 :1;
};
} GPIObits_t;
extern volatile GPIObits_t GPIObits @ 0x006;

# 305
extern volatile unsigned char ADCON0 @ 0x007;

asm("ADCON0 equ 07h");


typedef union {
struct {
unsigned ADON :1;
unsigned GO_nDONE :1;
unsigned CHS :2;
unsigned :2;
unsigned ANS :2;
};
struct {
unsigned :1;
unsigned GO :1;
unsigned CHS0 :1;
unsigned CHS1 :1;
unsigned :2;
unsigned ANS0 :1;
unsigned ANS1 :1;
};
struct {
unsigned :1;
unsigned nDONE :1;
};
} ADCON0bits_t;
extern volatile ADCON0bits_t ADCON0bits @ 0x007;

# 387
extern volatile unsigned char ADRES @ 0x008;

asm("ADRES equ 08h");


typedef union {
struct {
unsigned ADRES :8;
};
struct {
unsigned ADRES0 :1;
unsigned ADRES1 :1;
unsigned ADRES2 :1;
unsigned ADRES3 :1;
unsigned ADRES4 :1;
unsigned ADRES5 :1;
unsigned ADRES6 :1;
unsigned ADRES7 :1;
};
} ADRESbits_t;
extern volatile ADRESbits_t ADRESbits @ 0x008;

# 457
extern volatile __control unsigned char OPTION @ 0x000;



extern volatile __control unsigned char TRIS @ 0x006;



extern volatile __control unsigned char TRISGPIO @ 0x006;

# 487
extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;

extern volatile __bit ADRES0 @ (((unsigned) &ADRES)*8) + 0;

extern volatile __bit ADRES1 @ (((unsigned) &ADRES)*8) + 1;

extern volatile __bit ADRES2 @ (((unsigned) &ADRES)*8) + 2;

extern volatile __bit ADRES3 @ (((unsigned) &ADRES)*8) + 3;

extern volatile __bit ADRES4 @ (((unsigned) &ADRES)*8) + 4;

extern volatile __bit ADRES5 @ (((unsigned) &ADRES)*8) + 5;

extern volatile __bit ADRES6 @ (((unsigned) &ADRES)*8) + 6;

extern volatile __bit ADRES7 @ (((unsigned) &ADRES)*8) + 7;

extern volatile __bit ANS0 @ (((unsigned) &ADCON0)*8) + 6;

extern volatile __bit ANS1 @ (((unsigned) &ADCON0)*8) + 7;

extern volatile __bit CAL0 @ (((unsigned) &OSCCAL)*8) + 1;

extern volatile __bit CAL1 @ (((unsigned) &OSCCAL)*8) + 2;

extern volatile __bit CAL2 @ (((unsigned) &OSCCAL)*8) + 3;

extern volatile __bit CAL3 @ (((unsigned) &OSCCAL)*8) + 4;

extern volatile __bit CAL4 @ (((unsigned) &OSCCAL)*8) + 5;

extern volatile __bit CAL5 @ (((unsigned) &OSCCAL)*8) + 6;

extern volatile __bit CAL6 @ (((unsigned) &OSCCAL)*8) + 7;

extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;

extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;

extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;

extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;

extern volatile __bit FOSC4 @ (((unsigned) &OSCCAL)*8) + 0;

extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit GP0 @ (((unsigned) &GPIO)*8) + 0;

extern volatile __bit GP1 @ (((unsigned) &GPIO)*8) + 1;

extern volatile __bit GP2 @ (((unsigned) &GPIO)*8) + 2;

extern volatile __bit GP3 @ (((unsigned) &GPIO)*8) + 3;

extern volatile __bit GPWUF @ (((unsigned) &STATUS)*8) + 7;

extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;

extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;

extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;

extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;


# 27 "/Applications/microchip/xc8/v1.43/include/pic.h"
#pragma intrinsic(__nop)
extern void __nop(void);


# 151
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);
#pragma intrinsic(_delaywdt)
extern __nonreentrant void _delaywdt(unsigned long);

# 192
extern unsigned char __resetbits;
extern __bit __powerdown;
extern __bit __timeout;

# 13 "/Applications/microchip/xc8/v1.43/include/stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 12 "/Applications/microchip/xc8/v1.43/include/stdbool.h"
typedef unsigned char bool;


# 6 "main3.c"
#pragma config IOSCFS = 8MHZ
#pragma config MCPU = OFF
#pragma config WDTE = OFF
#pragma config CP = OFF
#pragma config MCLRE = OFF




static void Delay_ms(unsigned int DELAY_CNT) {
for (unsigned int i = 0; i < DELAY_CNT; i++) {
_delay((unsigned long)((1)*(8000000/4000.0)));
}
}

static int abs(int t) {
if(t < 0 ) return -t;
if(t >= 0) return t;
}

void main(void) {

int width = 0;
int max_width = 0;
long int panicTimer = 0;

OPTION = 0b11000000;

TRISGPIO = 0b1000;
ANS0 = 1;
ANS1 = 0;
CHS1 = 0; CHS0 = 0;
ADON = 1;

GP2 = 0; GP1 = 0;
Delay_ms(1000);

while(1) {

if((width > 0)&&(GP3 == 0)) {
GP2 = 1; GP1 = 1;
max_width = width - 110;
width = 0;
GO = 1;
while(nDONE);
};

if((width == 0)&&(GP3 == 1)) {
while(GP3) width++;
};

if((35 <= max_width)&&(max_width < 240)) {

if(abs(ADRES - max_width) > 30) {
panicTimer = 10000;
};

panicTimer--;if (panicTimer < 0) panicTimer = 0;

if((abs(ADRES - max_width) > 15)&&(panicTimer > 0)) {

if(ADRES > max_width) {
GP2 = 1; GP1 = 0;
} else {
GP2 = 0; GP1 = 1;
};

} else {GP2 = 1; GP1 = 1;};

} else {GP2 = 0; GP1 = 0;};

};
}

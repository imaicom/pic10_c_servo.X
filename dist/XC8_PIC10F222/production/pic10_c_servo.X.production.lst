

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Aug 21 16:49:55 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	10F222
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x1C,4
    12  0000                     
    13                           ; Version 1.43
    14                           ; Generated 25/07/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC10F222 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0008                     _ADRES	set	8
    57  0006                     _TRISGPIO	set	6
    58  0000                     _OPTION	set	0
    59  0039                     _nDONE	set	57
    60  0039                     _GO	set	57
    61  0033                     _GP3	set	51
    62  0031                     _GP1	set	49
    63  0032                     _GP2	set	50
    64  0038                     _ADON	set	56
    65  003A                     _CHS0	set	58
    66  003B                     _CHS1	set	59
    67  003F                     _ANS1	set	63
    68  003E                     _ANS0	set	62
    69                           
    70                           ; #config settings
    71  0000                     
    72                           	psect	cinit
    73  003                     start_initialization:	
    74  003                     __initialization:	
    75  003                     end_of_initialization:	
    76                           ;End of C runtime variable initialization code
    77                           
    78  003                     __end_of__initialization:	
    79  003  064                	clrf	4
    80  004  AF1                	ljmp	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMMON
    83  000                     __pcstackCOMMON:	
    84  000                     ??_abs:	
    85                           
    86                           	psect	cstackBANK0
    87  009                     __pcstackBANK0:	
    88                           ; 1 bytes @ 0x0
    89                           
    90  009                     ?_Delay_ms:	
    91  009                     ?_main:	
    92                           ; 1 bytes @ 0x0
    93                           
    94  009                     ?_abs:	
    95                           ; 1 bytes @ 0x0
    96                           
    97  009                     Delay_ms@DELAY_CNT:	
    98                           ; 2 bytes @ 0x0
    99                           
   100  009                     abs@t:	
   101                           ; 2 bytes @ 0x0
   102                           
   103                           
   104                           ; 2 bytes @ 0x0
   105  009                     	ds	2
   106  00B                     ??_Delay_ms:	
   107                           
   108                           ; 1 bytes @ 0x2
   109  00B                     	ds	2
   110  00D                     Delay_ms@i:	
   111                           
   112                           ; 2 bytes @ 0x4
   113  00D                     	ds	2
   114  00F                     ??_main:	
   115                           
   116                           ; 1 bytes @ 0x6
   117  00F                     	ds	1
   118  010                     main@panicTimer:	
   119                           
   120                           ; 4 bytes @ 0x7
   121  010                     	ds	4
   122  014                     main@width:	
   123                           
   124                           ; 2 bytes @ 0xB
   125  014                     	ds	2
   126  016                     main@max_width:	
   127                           
   128                           ; 2 bytes @ 0xD
   129  016                     	ds	2
   130                           
   131                           	psect	maintext
   132  0F1                     __pmaintext:	
   133 ;;
   134 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   135 ;;
   136 ;; *************** function _main *****************
   137 ;; Defined at:
   138 ;;		line 26 in file "main3.c"
   139 ;; Parameters:    Size  Location     Type
   140 ;;		None
   141 ;; Auto vars:     Size  Location     Type
   142 ;;  panicTimer      4    7[BANK0 ] long 
   143 ;;  max_width       2   13[BANK0 ] int 
   144 ;;  width           2   11[BANK0 ] int 
   145 ;; Return value:  Size  Location     Type
   146 ;;                  1   43[None  ] void 
   147 ;; Registers used:
   148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   149 ;; Tracked objects:
   150 ;;		On entry : B00/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMMON   BANK0
   154 ;;      Params:         0       0
   155 ;;      Locals:         0       8
   156 ;;      Temps:          0       1
   157 ;;      Totals:         0       9
   158 ;;Total ram usage:        9 bytes
   159 ;; Hardware stack levels required when called:    1
   160 ;; This function calls:
   161 ;;		_Delay_ms
   162 ;;		_abs
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           
   168                           
   169                           ;psect for function _main
   170  0F1                     _main:	
   171                           
   172                           ;main3.c: 28: int width = 0;
   173                           
   174                           ;incstack = 0
   175                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   176  0F1  074                	clrf	main@width
   177  0F2  075                	clrf	main@width+1
   178                           
   179                           ;main3.c: 29: int max_width = 0;
   180  0F3  076                	clrf	main@max_width
   181  0F4  077                	clrf	main@max_width+1
   182                           
   183                           ;main3.c: 30: long int panicTimer = 0;
   184  0F5  C00                	movlw	0
   185  0F6  03C                	movwf	28
   186  0F7  C00                	movlw	0
   187  0F8  03D                	movwf	29
   188  0F9  C00                	movlw	0
   189  0FA  03E                	movwf	30
   190  0FB  C00                	movlw	0
   191  0FC  03F                	movwf	31
   192  0FD  21F                	movf	31,w
   193  0FE  033                	movwf	main@panicTimer+3
   194  0FF  21E                	movf	30,w
   195  100  032                	movwf	main@panicTimer+2
   196  101  21D                	movf	29,w
   197  102  031                	movwf	main@panicTimer+1
   198  103  21C                	movf	28,w
   199  104  030                	movwf	main@panicTimer
   200                           
   201                           ;main3.c: 32: OPTION = 0b11000000;
   202  105  CC0                	movlw	192
   203  106  002                	option
   204                           
   205                           ;main3.c: 34: TRISGPIO = 0b1000;
   206  107  C08                	movlw	8
   207  108  006                	tris	6
   208                           
   209                           ;main3.c: 35: ANS0 = 1;
   210  109  5C7                	bsf	7,6	;volatile
   211                           
   212                           ;main3.c: 36: ANS1 = 0;
   213  10A  4E7                	bcf	7,7	;volatile
   214                           
   215                           ;main3.c: 37: CHS1 = 0; CHS0 = 0;
   216  10B  467                	bcf	7,3	;volatile
   217  10C  447                	bcf	7,2	;volatile
   218                           
   219                           ;main3.c: 38: ADON = 1;
   220  10D  507                	bsf	7,0	;volatile
   221                           
   222                           ;main3.c: 40: GP2 = 0; GP1 = 0;
   223  10E  446                	bcf	6,2	;volatile
   224  10F  426                	bcf	6,1	;volatile
   225                           
   226                           ;main3.c: 41: Delay_ms(1000);
   227  110  CE8                	movlw	232
   228  111  029                	movwf	Delay_ms@DELAY_CNT
   229  112  C03                	movlw	3
   230  113  02A                	movwf	Delay_ms@DELAY_CNT+1
   231  114  906                	fcall	entry__Delay_ms
   232  115                     l575:	
   233                           ;main3.c: 43: while(1) {
   234                           
   235                           
   236                           ;main3.c: 45: if((width > 0)&&(GP3 == 0)) {
   237  115  215                	movf	main@width+1,w
   238  116  03F                	movwf	31
   239  117  214                	movf	main@width,w
   240  118  03E                	movwf	30
   241  119  21F                	movf	31,w
   242  11A  F80                	xorlw	128
   243  11B  03C                	movwf	28
   244  11C  C80                	movlw	128
   245  11D  09C                	subwf	28,w
   246  11E  743                	skipz
   247  11F  B22                	goto	u205
   248  120  C01                	movlw	1
   249  121  09E                	subwf	30,w
   250  122                     u205:	
   251  122  603                	btfsc	3,0
   252  123  666                	btfsc	6,3	;volatile
   253  124  B39                	goto	l589
   254                           
   255                           ;main3.c: 46: GP2 = 1; GP1 = 1;
   256  125  546                	bsf	6,2	;volatile
   257  126  526                	bsf	6,1	;volatile
   258                           
   259                           ;main3.c: 47: max_width = width - 110;
   260  127  215                	movf	main@width+1,w
   261  128  03D                	movwf	29
   262  129  214                	movf	main@width,w
   263  12A  03C                	movwf	28
   264  12B  C92                	movlw	146
   265  12C  1DC                	addwf	28,w
   266  12D  036                	movwf	main@max_width
   267  12E  21D                	movf	29,w
   268  12F  037                	movwf	main@max_width+1
   269  130  603                	skipnc
   270  131  2B7                	incf	main@max_width+1,f
   271  132  CFF                	movlw	255
   272  133  1F7                	addwf	main@max_width+1,f
   273                           
   274                           ;main3.c: 48: width = 0;
   275  134  074                	clrf	main@width
   276  135  075                	clrf	main@width+1
   277                           
   278                           ;main3.c: 49: GO = 1;
   279  136  527                	bsf	7,1	;volatile
   280  137                     l587:	
   281                           ;main3.c: 50: while(nDONE);
   282                           
   283  137  627                	btfsc	7,1	;volatile
   284  138  B37                	goto	l587
   285  139                     l589:	
   286                           
   287                           ;main3.c: 51: };
   288                           ;main3.c: 53: if((width == 0)&&(GP3 == 1)) {
   289  139  214                	movf	main@width,w
   290  13A  115                	iorwf	main@width+1,w
   291  13B  743                	btfss	3,2
   292  13C  B4B                	goto	l599
   293  13D  666                	btfsc	6,3	;volatile
   294  13E  B49                	goto	l597
   295  13F  B4B                	goto	l599
   296  140                     l595:	
   297                           ;main3.c: 54: while(GP3) width++;
   298                           
   299  140  C01                	movlw	1
   300  141  03C                	movwf	28
   301  142  07D                	clrf	29
   302  143  21C                	movf	28,w
   303  144  1F4                	addwf	main@width,f
   304  145  603                	skipnc
   305  146  2B5                	incf	main@width+1,f
   306  147  21D                	movf	29,w
   307  148  1F5                	addwf	main@width+1,f
   308  149                     l597:	
   309  149  666                	btfsc	6,3	;volatile
   310  14A  B40                	goto	l595
   311  14B                     l599:	
   312                           
   313                           ;main3.c: 55: };
   314                           ;main3.c: 57: if((35 <= max_width)&&(max_width < 240)) {
   315  14B  217                	movf	main@max_width+1,w
   316  14C  03F                	movwf	31
   317  14D  216                	movf	main@max_width,w
   318  14E  03E                	movwf	30
   319  14F  21F                	movf	31,w
   320  150  F80                	xorlw	128
   321  151  03C                	movwf	28
   322  152  C80                	movlw	128
   323  153  09C                	subwf	28,w
   324  154  743                	skipz
   325  155  B58                	goto	u265
   326  156  C23                	movlw	35
   327  157  09E                	subwf	30,w
   328  158                     u265:	
   329  158  703                	skipc
   330  159  BFC                	goto	l625
   331  15A  217                	movf	main@max_width+1,w
   332  15B  03F                	movwf	31
   333  15C  216                	movf	main@max_width,w
   334  15D  03E                	movwf	30
   335  15E  21F                	movf	31,w
   336  15F  F80                	xorlw	128
   337  160  03C                	movwf	28
   338  161  C80                	movlw	128
   339  162  09C                	subwf	28,w
   340  163  743                	skipz
   341  164  B67                	goto	u275
   342  165  CF0                	movlw	240
   343  166  09E                	subwf	30,w
   344  167                     u275:	
   345  167  603                	skipnc
   346  168  BFC                	goto	l625
   347                           
   348                           ;main3.c: 59: if(abs(ADRES - max_width) > 25) {
   349  169  256                	comf	main@max_width,w
   350  16A  03C                	movwf	28
   351  16B  257                	comf	main@max_width+1,w
   352  16C  03D                	movwf	29
   353  16D  2BC                	incf	28,f
   354  16E  643                	skipnz
   355  16F  2BD                	incf	29,f
   356  170  208                	movf	8,w	;volatile
   357  171  1DC                	addwf	28,w
   358  172  029                	movwf	abs@t
   359  173  21D                	movf	29,w
   360  174  603                	skipnc
   361  175  29D                	incf	29,w
   362  176  02A                	movwf	abs@t+1
   363  177  905                	fcall	entry__abs
   364  178  209                	movf	?_abs,w
   365  179  03E                	movwf	30
   366  17A  20A                	movf	?_abs+1,w
   367  17B  03F                	movwf	31
   368  17C  21F                	movf	31,w
   369  17D  F80                	xorlw	128
   370  17E  03C                	movwf	28
   371  17F  C80                	movlw	128
   372  180  09C                	subwf	28,w
   373  181  743                	skipz
   374  182  B85                	goto	u285
   375  183  C1A                	movlw	26
   376  184  09E                	subwf	30,w
   377  185                     u285:	
   378  185  703                	skipc
   379  186  B97                	goto	l607
   380                           
   381                           ;main3.c: 60: panicTimer = 80000;
   382  187  C80                	movlw	128
   383  188  03C                	movwf	28
   384  189  C38                	movlw	56
   385  18A  03D                	movwf	29
   386  18B  C01                	movlw	1
   387  18C  03E                	movwf	30
   388  18D  C00                	movlw	0
   389  18E  03F                	movwf	31
   390  18F  21F                	movf	31,w
   391  190  033                	movwf	main@panicTimer+3
   392  191  21E                	movf	30,w
   393  192  032                	movwf	main@panicTimer+2
   394  193  21D                	movf	29,w
   395  194  031                	movwf	main@panicTimer+1
   396  195  21C                	movf	28,w
   397  196  030                	movwf	main@panicTimer
   398  197                     l607:	
   399                           
   400                           ;main3.c: 61: };
   401                           ;main3.c: 63: panicTimer--;if (panicTimer < 0) panicTimer = 0;
   402  197  CFF                	movlw	255
   403  198  1F0                	addwf	main@panicTimer,f
   404  199  CFF                	movlw	255
   405  19A  703                	skipc
   406  19B  1F1                	addwf	main@panicTimer+1,f
   407  19C  CFF                	movlw	255
   408  19D  703                	skipc
   409  19E  1F2                	addwf	main@panicTimer+2,f
   410  19F  CFF                	movlw	255
   411  1A0  703                	skipc
   412  1A1  1F3                	addwf	main@panicTimer+3,f
   413  1A2  7F3                	btfss	main@panicTimer+3,7
   414  1A3  BB4                	goto	l613
   415  1A4  C00                	movlw	0
   416  1A5  03C                	movwf	28
   417  1A6  C00                	movlw	0
   418  1A7  03D                	movwf	29
   419  1A8  C00                	movlw	0
   420  1A9  03E                	movwf	30
   421  1AA  C00                	movlw	0
   422  1AB  03F                	movwf	31
   423  1AC  21F                	movf	31,w
   424  1AD  033                	movwf	main@panicTimer+3
   425  1AE  21E                	movf	30,w
   426  1AF  032                	movwf	main@panicTimer+2
   427  1B0  21D                	movf	29,w
   428  1B1  031                	movwf	main@panicTimer+1
   429  1B2  21C                	movf	28,w
   430  1B3  030                	movwf	main@panicTimer
   431  1B4                     l613:	
   432                           
   433                           ;main3.c: 65: if((abs(ADRES - max_width) > 15)&&(panicTimer > 0)) {
   434  1B4  256                	comf	main@max_width,w
   435  1B5  03C                	movwf	28
   436  1B6  257                	comf	main@max_width+1,w
   437  1B7  03D                	movwf	29
   438  1B8  2BC                	incf	28,f
   439  1B9  643                	skipnz
   440  1BA  2BD                	incf	29,f
   441  1BB  208                	movf	8,w	;volatile
   442  1BC  1DC                	addwf	28,w
   443  1BD  029                	movwf	abs@t
   444  1BE  21D                	movf	29,w
   445  1BF  603                	skipnc
   446  1C0  29D                	incf	29,w
   447  1C1  02A                	movwf	abs@t+1
   448  1C2  905                	fcall	entry__abs
   449  1C3  209                	movf	?_abs,w
   450  1C4  03E                	movwf	30
   451  1C5  20A                	movf	?_abs+1,w
   452  1C6  03F                	movwf	31
   453  1C7  21F                	movf	31,w
   454  1C8  F80                	xorlw	128
   455  1C9  03C                	movwf	28
   456  1CA  C80                	movlw	128
   457  1CB  09C                	subwf	28,w
   458  1CC  743                	skipz
   459  1CD  BD0                	goto	u305
   460  1CE  C10                	movlw	16
   461  1CF  09E                	subwf	30,w
   462  1D0                     u305:	
   463  1D0  603                	btfsc	3,0
   464  1D1  6F3                	btfsc	main@panicTimer+3,7
   465  1D2  BF9                	goto	l623
   466  1D3  213                	movf	main@panicTimer+3,w
   467  1D4  743                	btfss	3,2
   468  1D5  BE2                	goto	l617
   469  1D6  212                	movf	main@panicTimer+2,w
   470  1D7  743                	btfss	3,2
   471  1D8  BE2                	goto	l617
   472  1D9  211                	movf	main@panicTimer+1,w
   473  1DA  743                	btfss	3,2
   474  1DB  BE2                	goto	l617
   475  1DC  C01                	movlw	1
   476  1DD  090                	subwf	main@panicTimer,w
   477  1DE  743                	skipz
   478  1DF  BE0                	goto	u313
   479  1E0                     u313:	
   480  1E0  703                	btfss	3,0
   481  1E1  BF9                	goto	l623
   482  1E2                     l617:	
   483                           
   484                           ;main3.c: 67: if(ADRES > max_width) {
   485  1E2  208                	movf	8,w	;volatile
   486  1E3  03C                	movwf	28
   487  1E4  07D                	clrf	29
   488  1E5  217                	movf	main@max_width+1,w
   489  1E6  03F                	movwf	31
   490  1E7  216                	movf	main@max_width,w
   491  1E8  03E                	movwf	30
   492  1E9  21F                	movf	31,w
   493  1EA  F80                	xorlw	128
   494  1EB  02F                	movwf	??_main
   495  1EC  21D                	movf	29,w
   496  1ED  F80                	xorlw	128
   497  1EE  08F                	subwf	??_main,w
   498  1EF  743                	skipz
   499  1F0  BF3                	goto	u325
   500  1F1  21C                	movf	28,w
   501  1F2  09E                	subwf	30,w
   502  1F3                     u325:	
   503  1F3  603                	skipnc
   504  1F4  BF7                	goto	l621
   505                           
   506                           ;main3.c: 68: GP2 = 1; GP1 = 0;
   507  1F5  546                	bsf	6,2	;volatile
   508  1F6  BFD                	goto	L1
   509  1F7                     l621:	
   510                           ;main3.c: 69: } else {
   511                           
   512                           
   513                           ;main3.c: 70: GP2 = 0; GP1 = 1;
   514  1F7  446                	bcf	6,2	;volatile
   515  1F8  BFA                	goto	L2
   516  1F9                     l623:	
   517                           ;main3.c: 71: };
   518                           ;main3.c: 73: } else {GP2 = 1; GP1 = 1;};
   519                           
   520  1F9  546                	bsf	6,2	;volatile
   521  1FA                     L2:	
   522  1FA  526                	bsf	6,1	;volatile
   523                           
   524                           ;main3.c: 75: } else {GP2 = 0; GP1 = 0;};
   525  1FB  B15                	goto	l575
   526  1FC                     l625:	
   527  1FC  446                	bcf	6,2	;volatile
   528  1FD                     L1:	
   529  1FD  426                	bcf	6,1	;volatile
   530  1FE  B15                	goto	l575
   531  1FF                     __end_of_main:	
   532                           
   533                           	psect	text1
   534  0BF                     __ptext1:	
   535 ;; *************** function _abs *****************
   536 ;; Defined at:
   537 ;;		line 21 in file "main3.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;  t               2    0[BANK0 ] int 
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  2    0[BANK0 ] int 
   544 ;; Registers used:
   545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0
   551 ;;      Params:         0       2
   552 ;;      Locals:         0       0
   553 ;;      Temps:          0       0
   554 ;;      Totals:         0       2
   555 ;;Total ram usage:        2 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; This function calls:
   558 ;;		Nothing
   559 ;; This function is called by:
   560 ;;		_main
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           
   565                           ;psect for function _abs
   566  0BF                     _abs:	
   567                           
   568                           ;main3.c: 22: if(t < 0 ) return -t;
   569  0BF  7EA                	btfss	abs@t+1,7
   570  0C0  ACD                	goto	l547
   571  0C1  249                	comf	abs@t,w
   572  0C2  03C                	movwf	28
   573  0C3  24A                	comf	abs@t+1,w
   574  0C4  03D                	movwf	29
   575  0C5  2BC                	incf	28,f
   576  0C6  643                	skipnz
   577  0C7  2BD                	incf	29,f
   578  0C8  21C                	movf	28,w
   579  0C9  029                	movwf	?_abs
   580  0CA  21D                	movf	29,w
   581  0CB  02A                	movwf	?_abs+1
   582  0CC  800                	retlw	0
   583  0CD                     l547:	
   584                           
   585                           ;main3.c: 23: if(t >= 0) return t;
   586  0CD  6EA                	btfsc	abs@t+1,7
   587  0CE  800                	retlw	0
   588  0CF  800                	retlw	0
   589  0D0                     __end_of_abs:	
   590                           
   591                           	psect	jmp_tab
   592  005                     __pjmp_tab:	
   593                           ;incstack = 0
   594                           ; Regs used in _abs: [wreg-fsr0h+status,2-btemp+1]
   595                           
   596  005                     entry__abs:	
   597  005  ABF                	ljmp	_abs
   598  006                     entry__Delay_ms:	
   599                           ;incstack = 0
   600                           ; Regs used in _Delay_ms: [wreg-fsr0h+status,2+btemp+0+btemp+1]
   601                           
   602  006  AD0                	ljmp	_Delay_ms
   603                           
   604                           	psect	text2
   605  0D0                     __ptext2:	
   606 ;; *************** function _Delay_ms *****************
   607 ;; Defined at:
   608 ;;		line 15 in file "main3.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  DELAY_CNT       2    0[BANK0 ] unsigned int 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  i               2    4[BANK0 ] unsigned int 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    0[BANK0 ] void 
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+1
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0
   622 ;;      Params:         0       2
   623 ;;      Locals:         0       2
   624 ;;      Temps:          0       2
   625 ;;      Totals:         0       6
   626 ;;Total ram usage:        6 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; This function calls:
   629 ;;		Nothing
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _Delay_ms
   637  0D0                     _Delay_ms:	
   638                           
   639                           ;main3.c: 16: for (unsigned int i = 0; i < DELAY_CNT; i++) {
   640  0D0  06D                	clrf	Delay_ms@i
   641  0D1  06E                	clrf	Delay_ms@i+1
   642  0D2                     l539:	
   643  0D2  20A                	movf	Delay_ms@DELAY_CNT+1,w
   644  0D3  03D                	movwf	29
   645  0D4  209                	movf	Delay_ms@DELAY_CNT,w
   646  0D5  03C                	movwf	28
   647  0D6  21D                	movf	29,w
   648  0D7  08E                	subwf	Delay_ms@i+1,w
   649  0D8  743                	skipz
   650  0D9  ADC                	goto	u175
   651  0DA  21C                	movf	28,w
   652  0DB  08D                	subwf	Delay_ms@i,w
   653  0DC                     u175:	
   654  0DC  603                	btfsc	3,0
   655  0DD  800                	retlw	0
   656                           
   657                           ;main3.c: 17: _delay((unsigned long)((1)*(8000000/4000.0)));
   658  0DE  C03                	movlw	3
   659  0DF  02C                	movwf	??_Delay_ms+1
   660  0E0  C97                	movlw	151
   661  0E1  02B                	movwf	??_Delay_ms
   662  0E2                     u337:	
   663  0E2  2EB                	decfsz	??_Delay_ms,f
   664  0E3  AE2                	goto	u337
   665  0E4  2EC                	decfsz	??_Delay_ms+1,f
   666  0E5  AE2                	goto	u337
   667  0E6  AE7                	nop2
   668  0E7  C01                	movlw	1
   669  0E8  03C                	movwf	28
   670  0E9  07D                	clrf	29
   671  0EA  21C                	movf	28,w
   672  0EB  1ED                	addwf	Delay_ms@i,f
   673  0EC  603                	skipnc
   674  0ED  2AE                	incf	Delay_ms@i+1,f
   675  0EE  21D                	movf	29,w
   676  0EF  1EE                	addwf	Delay_ms@i+1,f
   677  0F0  AD2                	goto	l539
   678  0F1                     __end_of_Delay_ms:	
   679  001C                     btemp	set	28	;btemp
   680  001C                     wtemp0	set	28
   681  001E                     wtemp1	set	30
   682  001C                     ttemp0	set	28
   683  001C                     ltemp0	set	28


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            21     15      15

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Delay_ms

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     492
                                              6 BANK0      9     9      0
                           _Delay_ms
                                _abs
 ---------------------------------------------------------------------------------
 (1) _abs                                                  2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             6     4      2      89
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _abs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               15      F       F       3       71.4%
ABS                  0      0       0       4        0.0%
BITBANK0            15      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Aug 21 16:49:55 2017

            __CFG_CP$OFF 0000                       _GO 0039                       fsr 0004  
                    l621 01F7                      l613 01B4                      l623 01F9  
                    l607 0197                      l617 01E2                      l625 01FC  
                    l539 00D2                      l547 00CD                      l575 0115  
                    l595 0140                      l587 0137                      l597 0149  
                    l589 0139                      l599 014B                      _GP1 0031  
                    _GP2 0032                      _GP3 0033                      u205 0122  
                    u313 01E0                      u305 01D0                      u325 01F3  
                    u175 00DC                      u337 00E2                      u265 0158  
                    u275 0167                      u285 0185                      _abs 00BF  
                   ?_abs 0009                     _ADON 0038                     _CHS0 003A  
                   _CHS1 003B                     _ANS0 003E                     _ANS1 003F  
                   abs@t 0009                     _main 00F1                     btemp 001C  
                   start 0002            __CFG_MCPU$OFF 0000                    ??_abs 0000  
                  ?_main 0009                    _ADRES 0008            __CFG_WDTE$OFF 0000  
                  _nDONE 0039                    ltemp0 001C                    ttemp0 001C  
                  status 0003                    wtemp0 001C                    wtemp1 001E  
      Delay_ms@DELAY_CNT 0009         __end_of_Delay_ms 00F1           __CFG_MCLRE$OFF 0000  
        __initialization 0003             __end_of_main 01FF                   ??_main 000F  
                 _OPTION 0000            main@max_width 0016  __end_of__initialization 0003  
         __pcstackCOMMON 0000                ?_Delay_ms 0009               __pmaintext 00F1  
             ??_Delay_ms 000B           main@panicTimer 0010                  __ptext1 00BF  
                __ptext2 00D0             __size_of_abs 0011     end_of_initialization 0003  
              Delay_ms@i 000D      start_initialization 0003              __end_of_abs 00D0  
       __CFG_IOSCFS$8MHZ 0000        __size_of_Delay_ms 0021           entry__Delay_ms 0006  
              ___latbits 0000            __pcstackBANK0 0009                __pjmp_tab 0005  
               _TRISGPIO 0006                main@width 0014                 _Delay_ms 00D0  
              entry__abs 0005            __size_of_main 010E  

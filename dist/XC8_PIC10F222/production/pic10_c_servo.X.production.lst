

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Nov 27 21:20:02 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	10F222
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x1C,4
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0006                     	;# 
    19  0007                     	;# 
    20  0008                     	;# 
    21  0008                     _ADRES	set	8
    22  0000                     _OPTION	set	0
    23  0006                     _TRISGPIO	set	6
    24  0038                     _ADON	set	56
    25  003E                     _ANS0	set	62
    26  003F                     _ANS1	set	63
    27  003A                     _CHS0	set	58
    28  003B                     _CHS1	set	59
    29  0039                     _GO	set	57
    30  0031                     _GP1	set	49
    31  0032                     _GP2	set	50
    32  0033                     _GP3	set	51
    33  0039                     _nDONE	set	57
    34                           
    35                           ; #config settings
    36  0000                     
    37                           	psect	cinit
    38  003                     start_initialization:	
    39  003                     __initialization:	
    40  003                     end_of_initialization:	
    41                           ;End of C runtime variable initialization code
    42                           
    43  003                     __end_of__initialization:	
    44  003  064                	clrf	4
    45  004  B5C                	ljmp	_main	;jump to C main() function
    46                           
    47                           	psect	cstackCOMMON
    48  000                     __pcstackCOMMON:	
    49  000                     ??_abs:	
    50                           
    51                           	psect	cstackBANK0
    52  009                     __pcstackBANK0:	
    53                           ; 1 bytes @ 0x0
    54                           
    55  009                     ?_Delay_ms:	
    56  009                     ?_main:	
    57                           ; 1 bytes @ 0x0
    58                           
    59  009                     ?_abs:	
    60                           ; 1 bytes @ 0x0
    61                           
    62  009                     Delay_ms@DELAY_CNT:	
    63                           ; 2 bytes @ 0x0
    64                           
    65  009                     abs@t:	
    66                           ; 2 bytes @ 0x0
    67                           
    68                           
    69                           ; 2 bytes @ 0x0
    70  009                     	ds	2
    71  00B                     ??_Delay_ms:	
    72                           
    73                           ; 1 bytes @ 0x2
    74  00B                     	ds	2
    75  00D                     Delay_ms@i:	
    76                           
    77                           ; 2 bytes @ 0x4
    78  00D                     	ds	2
    79  00F                     ??_main:	
    80                           
    81                           ; 1 bytes @ 0x6
    82  00F                     	ds	1
    83  010                     main@width:	
    84                           
    85                           ; 2 bytes @ 0x7
    86  010                     	ds	2
    87  012                     main@max_width:	
    88                           
    89                           ; 2 bytes @ 0x9
    90  012                     	ds	2
    91                           
    92                           	psect	maintext
    93  15C                     __pmaintext:	
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 26 in file "main3.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;  max_width       2    9[BANK0 ] int 
   104 ;;  width           2    7[BANK0 ] int 
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1   41[None  ] void 
   107 ;; Registers used:
   108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : B00/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMMON   BANK0
   114 ;;      Params:         0       0
   115 ;;      Locals:         0       4
   116 ;;      Temps:          0       1
   117 ;;      Totals:         0       5
   118 ;;Total ram usage:        5 bytes
   119 ;; Hardware stack levels required when called:    1
   120 ;; This function calls:
   121 ;;		_Delay_ms
   122 ;;		_abs
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           
   129                           ;psect for function _main
   130  15C                     _main:	
   131                           
   132                           ;main3.c: 28: int width = 0;
   133                           
   134                           ;incstack = 0
   135                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   136  15C  070                	clrf	main@width
   137  15D  071                	clrf	main@width+1
   138                           
   139                           ;main3.c: 29: int max_width = 0;
   140  15E  072                	clrf	main@max_width
   141  15F  073                	clrf	main@max_width+1
   142                           
   143                           ;main3.c: 32: OPTION = 0b11000000;
   144  160  CC0                	movlw	192
   145  161  002                	option
   146                           
   147                           ;main3.c: 34: TRISGPIO = 0b1000;
   148  162  C08                	movlw	8
   149  163  006                	tris	6
   150                           
   151                           ;main3.c: 35: ANS0 = 1;
   152  164  5C7                	bsf	7,6	;volatile
   153                           
   154                           ;main3.c: 36: ANS1 = 0;
   155  165  4E7                	bcf	7,7	;volatile
   156                           
   157                           ;main3.c: 37: CHS1 = 0; CHS0 = 0;
   158  166  467                	bcf	7,3	;volatile
   159  167  447                	bcf	7,2	;volatile
   160                           
   161                           ;main3.c: 38: ADON = 1;
   162  168  507                	bsf	7,0	;volatile
   163                           
   164                           ;main3.c: 40: GP2 = 0; GP1 = 0;
   165  169  446                	bcf	6,2	;volatile
   166  16A  426                	bcf	6,1	;volatile
   167                           
   168                           ;main3.c: 41: Delay_ms(1000);
   169  16B  CE8                	movlw	232
   170  16C  029                	movwf	Delay_ms@DELAY_CNT
   171  16D  C03                	movlw	3
   172  16E  02A                	movwf	Delay_ms@DELAY_CNT+1
   173  16F  906                	fcall	entry__Delay_ms
   174  170                     l555:	
   175                           ;main3.c: 43: while(1) {
   176                           
   177                           
   178                           ;main3.c: 45: if((width > 0)&&(GP3 == 0)) {
   179  170  211                	movf	main@width+1,w
   180  171  03F                	movwf	31
   181  172  210                	movf	main@width,w
   182  173  03E                	movwf	30
   183  174  21F                	movf	31,w
   184  175  F80                	xorlw	128
   185  176  03C                	movwf	28
   186  177  C80                	movlw	128
   187  178  09C                	subwf	28,w
   188  179  743                	skipz
   189  17A  B7D                	goto	u175
   190  17B  C01                	movlw	1
   191  17C  09E                	subwf	30,w
   192  17D                     u175:	
   193  17D  603                	btfsc	3,0
   194  17E  666                	btfsc	6,3	;volatile
   195  17F  B94                	goto	l569
   196                           
   197                           ;main3.c: 46: GP2 = 1; GP1 = 1;
   198  180  546                	bsf	6,2	;volatile
   199  181  526                	bsf	6,1	;volatile
   200                           
   201                           ;main3.c: 47: max_width = width - 110;
   202  182  211                	movf	main@width+1,w
   203  183  03D                	movwf	29
   204  184  210                	movf	main@width,w
   205  185  03C                	movwf	28
   206  186  C92                	movlw	146
   207  187  1DC                	addwf	28,w
   208  188  032                	movwf	main@max_width
   209  189  21D                	movf	29,w
   210  18A  033                	movwf	main@max_width+1
   211  18B  603                	skipnc
   212  18C  2B3                	incf	main@max_width+1,f
   213  18D  CFF                	movlw	255
   214  18E  1F3                	addwf	main@max_width+1,f
   215                           
   216                           ;main3.c: 48: width = 0;
   217  18F  070                	clrf	main@width
   218  190  071                	clrf	main@width+1
   219                           
   220                           ;main3.c: 49: GO = 1;
   221  191  527                	bsf	7,1	;volatile
   222  192                     l567:	
   223                           ;main3.c: 50: while(nDONE);
   224                           
   225  192  627                	btfsc	7,1	;volatile
   226  193  B92                	goto	l567
   227  194                     l569:	
   228                           
   229                           ;main3.c: 51: };
   230                           ;main3.c: 53: if((width == 0)&&(GP3 == 1)) {
   231  194  210                	movf	main@width,w
   232  195  111                	iorwf	main@width+1,w
   233  196  743                	btfss	3,2
   234  197  BA6                	goto	l579
   235  198  666                	btfsc	6,3	;volatile
   236  199  BA4                	goto	l577
   237  19A  BA6                	goto	l579
   238  19B                     l575:	
   239                           ;main3.c: 54: while(GP3) width++;
   240                           
   241  19B  C01                	movlw	1
   242  19C  03C                	movwf	28
   243  19D  07D                	clrf	29
   244  19E  21C                	movf	28,w
   245  19F  1F0                	addwf	main@width,f
   246  1A0  603                	skipnc
   247  1A1  2B1                	incf	main@width+1,f
   248  1A2  21D                	movf	29,w
   249  1A3  1F1                	addwf	main@width+1,f
   250  1A4                     l577:	
   251  1A4  666                	btfsc	6,3	;volatile
   252  1A5  B9B                	goto	l575
   253  1A6                     l579:	
   254                           
   255                           ;main3.c: 55: };
   256                           ;main3.c: 57: if((35 <= max_width)&&(max_width < 240)) {
   257  1A6  213                	movf	main@max_width+1,w
   258  1A7  03F                	movwf	31
   259  1A8  212                	movf	main@max_width,w
   260  1A9  03E                	movwf	30
   261  1AA  21F                	movf	31,w
   262  1AB  F80                	xorlw	128
   263  1AC  03C                	movwf	28
   264  1AD  C80                	movlw	128
   265  1AE  09C                	subwf	28,w
   266  1AF  743                	skipz
   267  1B0  BB3                	goto	u235
   268  1B1  C23                	movlw	35
   269  1B2  09E                	subwf	30,w
   270  1B3                     u235:	
   271  1B3  703                	skipc
   272  1B4  BFC                	goto	l593
   273  1B5  213                	movf	main@max_width+1,w
   274  1B6  03F                	movwf	31
   275  1B7  212                	movf	main@max_width,w
   276  1B8  03E                	movwf	30
   277  1B9  21F                	movf	31,w
   278  1BA  F80                	xorlw	128
   279  1BB  03C                	movwf	28
   280  1BC  C80                	movlw	128
   281  1BD  09C                	subwf	28,w
   282  1BE  743                	skipz
   283  1BF  BC2                	goto	u245
   284  1C0  CF0                	movlw	240
   285  1C1  09E                	subwf	30,w
   286  1C2                     u245:	
   287  1C2  603                	skipnc
   288  1C3  BFC                	goto	l593
   289                           
   290                           ;main3.c: 59: if(abs(ADRES - max_width) > 15) {
   291  1C4  252                	comf	main@max_width,w
   292  1C5  03C                	movwf	28
   293  1C6  253                	comf	main@max_width+1,w
   294  1C7  03D                	movwf	29
   295  1C8  2BC                	incf	28,f
   296  1C9  643                	skipnz
   297  1CA  2BD                	incf	29,f
   298  1CB  208                	movf	8,w	;volatile
   299  1CC  1DC                	addwf	28,w
   300  1CD  029                	movwf	abs@t
   301  1CE  21D                	movf	29,w
   302  1CF  603                	skipnc
   303  1D0  29D                	incf	29,w
   304  1D1  02A                	movwf	abs@t+1
   305  1D2  905                	fcall	entry__abs
   306  1D3  209                	movf	?_abs,w
   307  1D4  03E                	movwf	30
   308  1D5  20A                	movf	?_abs+1,w
   309  1D6  03F                	movwf	31
   310  1D7  21F                	movf	31,w
   311  1D8  F80                	xorlw	128
   312  1D9  03C                	movwf	28
   313  1DA  C80                	movlw	128
   314  1DB  09C                	subwf	28,w
   315  1DC  743                	skipz
   316  1DD  BE0                	goto	u255
   317  1DE  C10                	movlw	16
   318  1DF  09E                	subwf	30,w
   319  1E0                     u255:	
   320  1E0  703                	skipc
   321  1E1  BF9                	goto	l591
   322                           
   323                           ;main3.c: 61: if(ADRES > max_width) {
   324  1E2  208                	movf	8,w	;volatile
   325  1E3  03C                	movwf	28
   326  1E4  07D                	clrf	29
   327  1E5  213                	movf	main@max_width+1,w
   328  1E6  03F                	movwf	31
   329  1E7  212                	movf	main@max_width,w
   330  1E8  03E                	movwf	30
   331  1E9  21F                	movf	31,w
   332  1EA  F80                	xorlw	128
   333  1EB  02F                	movwf	??_main
   334  1EC  21D                	movf	29,w
   335  1ED  F80                	xorlw	128
   336  1EE  08F                	subwf	??_main,w
   337  1EF  743                	skipz
   338  1F0  BF3                	goto	u265
   339  1F1  21C                	movf	28,w
   340  1F2  09E                	subwf	30,w
   341  1F3                     u265:	
   342  1F3  603                	skipnc
   343  1F4  BF7                	goto	l589
   344                           
   345                           ;main3.c: 62: GP2 = 1; GP1 = 0;
   346  1F5  546                	bsf	6,2	;volatile
   347  1F6  BFD                	goto	L1
   348  1F7                     l589:	
   349                           ;main3.c: 63: } else {
   350                           
   351                           
   352                           ;main3.c: 64: GP2 = 0; GP1 = 1;
   353  1F7  446                	bcf	6,2	;volatile
   354  1F8  BFA                	goto	L2
   355  1F9                     l591:	
   356                           ;main3.c: 65: };
   357                           ;main3.c: 67: } else {GP2 = 1; GP1 = 1;};
   358                           
   359  1F9  546                	bsf	6,2	;volatile
   360  1FA                     L2:	
   361  1FA  526                	bsf	6,1	;volatile
   362                           
   363                           ;main3.c: 69: } else {GP2 = 0; GP1 = 0;};
   364  1FB  B70                	goto	l555
   365  1FC                     l593:	
   366  1FC  446                	bcf	6,2	;volatile
   367  1FD                     L1:	
   368  1FD  426                	bcf	6,1	;volatile
   369  1FE  B70                	goto	l555
   370  1FF                     __end_of_main:	
   371                           
   372                           	psect	text1
   373  12A                     __ptext1:	
   374 ;; *************** function _abs *****************
   375 ;; Defined at:
   376 ;;		line 21 in file "main3.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;  t               2    0[BANK0 ] int 
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  2    0[BANK0 ] int 
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0
   390 ;;      Params:         0       2
   391 ;;      Locals:         0       0
   392 ;;      Temps:          0       0
   393 ;;      Totals:         0       2
   394 ;;Total ram usage:        2 bytes
   395 ;; Hardware stack levels used:    1
   396 ;; This function calls:
   397 ;;		Nothing
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _abs
   405  12A                     _abs:	
   406                           
   407                           ;main3.c: 22: if(t < 0 ) return -t;
   408  12A  7EA                	btfss	abs@t+1,7
   409  12B  B38                	goto	l529
   410  12C  249                	comf	abs@t,w
   411  12D  03C                	movwf	28
   412  12E  24A                	comf	abs@t+1,w
   413  12F  03D                	movwf	29
   414  130  2BC                	incf	28,f
   415  131  643                	skipnz
   416  132  2BD                	incf	29,f
   417  133  21C                	movf	28,w
   418  134  029                	movwf	?_abs
   419  135  21D                	movf	29,w
   420  136  02A                	movwf	?_abs+1
   421  137  800                	retlw	0
   422  138                     l529:	
   423                           
   424                           ;main3.c: 23: if(t >= 0) return t;
   425  138  6EA                	btfsc	abs@t+1,7
   426  139  800                	retlw	0
   427  13A  800                	retlw	0
   428  13B                     __end_of_abs:	
   429                           
   430                           	psect	jmp_tab
   431  005                     __pjmp_tab:	
   432                           ;incstack = 0
   433                           ; Regs used in _abs: [wreg-fsr0h+status,2-btemp+1]
   434                           
   435  005                     entry__abs:	
   436  005  B2A                	ljmp	_abs
   437  006                     entry__Delay_ms:	
   438                           ;incstack = 0
   439                           ; Regs used in _Delay_ms: [wreg-fsr0h+status,2+btemp+0+btemp+1]
   440                           
   441  006  B3B                	ljmp	_Delay_ms
   442                           
   443                           	psect	text2
   444  13B                     __ptext2:	
   445 ;; *************** function _Delay_ms *****************
   446 ;; Defined at:
   447 ;;		line 15 in file "main3.c"
   448 ;; Parameters:    Size  Location     Type
   449 ;;  DELAY_CNT       2    0[BANK0 ] unsigned int 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  i               2    4[BANK0 ] unsigned int 
   452 ;; Return value:  Size  Location     Type
   453 ;;                  1    0[BANK0 ] void 
   454 ;; Registers used:
   455 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+1
   456 ;; Tracked objects:
   457 ;;		On entry : 0/0
   458 ;;		On exit  : 0/0
   459 ;;		Unchanged: 0/0
   460 ;; Data sizes:     COMMON   BANK0
   461 ;;      Params:         0       2
   462 ;;      Locals:         0       2
   463 ;;      Temps:          0       2
   464 ;;      Totals:         0       6
   465 ;;Total ram usage:        6 bytes
   466 ;; Hardware stack levels used:    1
   467 ;; This function calls:
   468 ;;		Nothing
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           
   475                           ;psect for function _Delay_ms
   476  13B                     _Delay_ms:	
   477                           
   478                           ;main3.c: 16: for (unsigned int i = 0; i < DELAY_CNT; i++) {
   479  13B  06D                	clrf	Delay_ms@i
   480  13C  06E                	clrf	Delay_ms@i+1
   481  13D                     l521:	
   482  13D  20A                	movf	Delay_ms@DELAY_CNT+1,w
   483  13E  03D                	movwf	29
   484  13F  209                	movf	Delay_ms@DELAY_CNT,w
   485  140  03C                	movwf	28
   486  141  21D                	movf	29,w
   487  142  08E                	subwf	Delay_ms@i+1,w
   488  143  743                	skipz
   489  144  B47                	goto	u145
   490  145  21C                	movf	28,w
   491  146  08D                	subwf	Delay_ms@i,w
   492  147                     u145:	
   493  147  603                	btfsc	3,0
   494  148  800                	retlw	0
   495                           
   496                           ;main3.c: 17: _delay((unsigned long)((1)*(8000000/4000.0)));
   497  149  C03                	movlw	3
   498  14A  02C                	movwf	??_Delay_ms+1
   499  14B  C97                	movlw	151
   500  14C  02B                	movwf	??_Delay_ms
   501  14D                     u277:	
   502  14D  2EB                	decfsz	??_Delay_ms,f
   503  14E  B4D                	goto	u277
   504  14F  2EC                	decfsz	??_Delay_ms+1,f
   505  150  B4D                	goto	u277
   506  151  B52                	nop2
   507  152  C01                	movlw	1
   508  153  03C                	movwf	28
   509  154  07D                	clrf	29
   510  155  21C                	movf	28,w
   511  156  1ED                	addwf	Delay_ms@i,f
   512  157  603                	skipnc
   513  158  2AE                	incf	Delay_ms@i+1,f
   514  159  21D                	movf	29,w
   515  15A  1EE                	addwf	Delay_ms@i+1,f
   516  15B  B3D                	goto	l521
   517  15C                     __end_of_Delay_ms:	
   518  001C                     btemp	set	28	;btemp
   519  001C                     wtemp	set	28
   520  001C                     wtemp0	set	28
   521  001E                     wtemp1	set	30
   522  0020                     wtemp2	set	32
   523  0022                     wtemp3	set	34
   524  0024                     wtemp4	set	36
   525  0026                     wtemp5	set	38
   526  001D                     wtemp6	set	29
   527  001C                     ttemp	set	28
   528  001C                     ttemp0	set	28
   529  001F                     ttemp1	set	31
   530  0022                     ttemp2	set	34
   531  0025                     ttemp3	set	37
   532  001D                     ttemp4	set	29
   533  001C                     ltemp	set	28
   534  001C                     ltemp0	set	28
   535  0020                     ltemp1	set	32
   536  0024                     ltemp2	set	36
   537  001E                     ltemp3	set	30


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            21     11      11

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Delay_ms

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     379
                                              6 BANK0      5     5      0
                           _Delay_ms
                                _abs
 ---------------------------------------------------------------------------------
 (1) _abs                                                  2     0      2     131
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             6     4      2      89
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _abs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
STACK                0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
DATA                 0      0       0       1        0.0%
BITCOMMON            0      0       0       2        0.0%
BITBANK0            15      0       0       3        0.0%
COMMON               0      0       0       4        0.0%
BANK0               15      B       B       5       52.4%
ABS                  0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Nov 27 21:20:02 2016

            __CFG_CP$OFF 0000                       _GO 0039                       fsr 0004  
                    l521 013D                      l529 0138                      l555 0170  
                    l591 01F9                      l575 019B                      l567 0192  
                    l593 01FC                      l577 01A4                      l569 0194  
                    l579 01A6                      l589 01F7                      _GP1 0031  
                    _GP2 0032                      _GP3 0033                      u145 0147  
                    u235 01B3                      u245 01C2                      u255 01E0  
                    u175 017D                      u265 01F3                      u277 014D  
                    _abs 012A                     ?_abs 0009                     _ADON 0038  
                   _CHS0 003A                     _CHS1 003B                     _ANS0 003E  
                   _ANS1 003F                     abs@t 0009                     _main 015C  
                   btemp 001C                     ltemp 001C                     start 0002  
                   ttemp 001C                     wtemp 001C            __CFG_MCPU$OFF 0000  
                  ??_abs 0000                    ?_main 0009                    _ADRES 0008  
          __CFG_WDTE$OFF 0000                    _nDONE 0039                    ltemp0 001C  
                  ltemp1 0020                    ltemp2 0024                    ltemp3 001E  
                  ttemp0 001C                    ttemp1 001F                    ttemp2 0022  
                  ttemp3 0025                    ttemp4 001D                    status 0003  
                  wtemp0 001C                    wtemp1 001E                    wtemp2 0020  
                  wtemp3 0022                    wtemp4 0024                    wtemp5 0026  
                  wtemp6 001D        Delay_ms@DELAY_CNT 0009         __end_of_Delay_ms 015C  
         __CFG_MCLRE$OFF 0000          __initialization 0003             __end_of_main 01FF  
                 ??_main 000F                   _OPTION 0000            main@max_width 0012  
__end_of__initialization 0003           __pcstackCOMMON 0000                ?_Delay_ms 0009  
             __pmaintext 015C               ??_Delay_ms 000B                  __ptext1 012A  
                __ptext2 013B             __size_of_abs 0011     end_of_initialization 0003  
              Delay_ms@i 000D      start_initialization 0003              __end_of_abs 013B  
       __CFG_IOSCFS$8MHZ 0000        __size_of_Delay_ms 0021           entry__Delay_ms 0006  
              ___latbits 0000            __pcstackBANK0 0009                __pjmp_tab 0005  
               _TRISGPIO 0006                main@width 0010                 _Delay_ms 013B  
              entry__abs 0005            __size_of_main 00A3  

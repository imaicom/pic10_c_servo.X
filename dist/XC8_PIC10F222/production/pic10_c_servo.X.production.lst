

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Nov  3 00:38:37 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	10F222
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x1C,4
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0006                     	;# 
    19  0007                     	;# 
    20  0008                     	;# 
    21  0008                     _ADRES	set	8
    22  0000                     _OPTION	set	0
    23  0006                     _TRISGPIO	set	6
    24  0038                     _ADON	set	56
    25  003E                     _ANS0	set	62
    26  003F                     _ANS1	set	63
    27  003A                     _CHS0	set	58
    28  003B                     _CHS1	set	59
    29  0039                     _GO	set	57
    30  0031                     _GP1	set	49
    31  0032                     _GP2	set	50
    32  0033                     _GP3	set	51
    33  0039                     _nDONE	set	57
    34                           
    35                           ; #config settings
    36  0000                     
    37                           	psect	cinit
    38  003                     start_initialization:	
    39  003                     __initialization:	
    40  003                     end_of_initialization:	
    41                           ;End of C runtime variable initialization code
    42                           
    43  003                     __end_of__initialization:	
    44  003  064                	clrf	4
    45  004  B5E                	ljmp	_main	;jump to C main() function
    46                           
    47                           	psect	cstackCOMMON
    48  000                     __pcstackCOMMON:	
    49  000                     ??_abs:	
    50                           
    51                           	psect	cstackBANK0
    52  009                     __pcstackBANK0:	
    53                           ; 1 bytes @ 0x0
    54                           
    55  009                     ?_Delay_ms:	
    56  009                     ?_main:	
    57                           ; 1 bytes @ 0x0
    58                           
    59  009                     ?_abs:	
    60                           ; 1 bytes @ 0x0
    61                           
    62  009                     Delay_ms@DELAY_CNT:	
    63                           ; 2 bytes @ 0x0
    64                           
    65  009                     abs@t:	
    66                           ; 2 bytes @ 0x0
    67                           
    68                           
    69                           ; 2 bytes @ 0x0
    70  009                     	ds	2
    71  00B                     ??_Delay_ms:	
    72                           
    73                           ; 1 bytes @ 0x2
    74  00B                     	ds	2
    75  00D                     Delay_ms@i:	
    76                           
    77                           ; 2 bytes @ 0x4
    78  00D                     	ds	2
    79  00F                     ??_main:	
    80                           
    81                           ; 1 bytes @ 0x6
    82  00F                     	ds	1
    83  010                     main@width:	
    84                           
    85                           ; 2 bytes @ 0x7
    86  010                     	ds	2
    87  012                     main@max_width:	
    88                           
    89                           ; 2 bytes @ 0x9
    90  012                     	ds	2
    91                           
    92                           	psect	maintext
    93  15E                     __pmaintext:	
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 26 in file "main3.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;  max_width       2    9[BANK0 ] int 
   104 ;;  width           2    7[BANK0 ] int 
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1   41[None  ] void 
   107 ;; Registers used:
   108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : B00/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMMON   BANK0
   114 ;;      Params:         0       0
   115 ;;      Locals:         0       4
   116 ;;      Temps:          0       1
   117 ;;      Totals:         0       5
   118 ;;Total ram usage:        5 bytes
   119 ;; Hardware stack levels required when called:    1
   120 ;; This function calls:
   121 ;;		_Delay_ms
   122 ;;		_abs
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           
   129                           ;psect for function _main
   130  15E                     _main:	
   131                           
   132                           ;main3.c: 28: int width = 0;
   133                           
   134                           ;incstack = 0
   135                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   136  15E  070                	clrf	main@width
   137  15F  071                	clrf	main@width+1
   138                           
   139                           ;main3.c: 29: int max_width = 0;
   140  160  072                	clrf	main@max_width
   141  161  073                	clrf	main@max_width+1
   142                           
   143                           ;main3.c: 31: OPTION = 0b11000000;
   144  162  CC0                	movlw	192
   145  163  002                	option
   146                           
   147                           ;main3.c: 33: TRISGPIO = 0b1000;
   148  164  C08                	movlw	8
   149  165  006                	tris	6
   150                           
   151                           ;main3.c: 34: ANS0 = 1;
   152  166  5C7                	bsf	7,6	;volatile
   153                           
   154                           ;main3.c: 35: ANS1 = 0;
   155  167  4E7                	bcf	7,7	;volatile
   156                           
   157                           ;main3.c: 36: CHS1 = 0; CHS0 = 0;
   158  168  467                	bcf	7,3	;volatile
   159  169  447                	bcf	7,2	;volatile
   160                           
   161                           ;main3.c: 37: ADON = 1;
   162  16A  507                	bsf	7,0	;volatile
   163                           
   164                           ;main3.c: 39: GP2 = 0; GP1 = 0;
   165  16B  446                	bcf	6,2	;volatile
   166  16C  426                	bcf	6,1	;volatile
   167                           
   168                           ;main3.c: 40: Delay_ms(1000);
   169  16D  CE8                	movlw	232
   170  16E  029                	movwf	Delay_ms@DELAY_CNT
   171  16F  C03                	movlw	3
   172  170  02A                	movwf	Delay_ms@DELAY_CNT+1
   173  171  906                	fcall	entry__Delay_ms
   174  172                     l553:	
   175                           ;main3.c: 42: while(1) {
   176                           
   177                           
   178                           ;main3.c: 44: if((width > 0)&&(GP3 == 0)) {
   179  172  211                	movf	main@width+1,w
   180  173  03F                	movwf	31
   181  174  210                	movf	main@width,w
   182  175  03E                	movwf	30
   183  176  21F                	movf	31,w
   184  177  F80                	xorlw	128
   185  178  03C                	movwf	28
   186  179  C80                	movlw	128
   187  17A  09C                	subwf	28,w
   188  17B  743                	skipz
   189  17C  B7F                	goto	u175
   190  17D  C01                	movlw	1
   191  17E  09E                	subwf	30,w
   192  17F                     u175:	
   193  17F  603                	btfsc	3,0
   194  180  666                	btfsc	6,3	;volatile
   195  181  B94                	goto	l565
   196                           
   197                           ;main3.c: 45: max_width = width - 110;
   198  182  211                	movf	main@width+1,w
   199  183  03D                	movwf	29
   200  184  210                	movf	main@width,w
   201  185  03C                	movwf	28
   202  186  C92                	movlw	146
   203  187  1DC                	addwf	28,w
   204  188  032                	movwf	main@max_width
   205  189  21D                	movf	29,w
   206  18A  033                	movwf	main@max_width+1
   207  18B  603                	skipnc
   208  18C  2B3                	incf	main@max_width+1,f
   209  18D  CFF                	movlw	255
   210  18E  1F3                	addwf	main@max_width+1,f
   211                           
   212                           ;main3.c: 46: width = 0;
   213  18F  070                	clrf	main@width
   214  190  071                	clrf	main@width+1
   215                           
   216                           ;main3.c: 47: GO = 1;
   217  191  527                	bsf	7,1	;volatile
   218  192                     l563:	
   219                           ;main3.c: 48: while(nDONE);
   220                           
   221  192  627                	btfsc	7,1	;volatile
   222  193  B92                	goto	l563
   223  194                     l565:	
   224                           
   225                           ;main3.c: 49: };
   226                           ;main3.c: 51: if((width == 0)&&(GP3 == 1)) {
   227  194  210                	movf	main@width,w
   228  195  111                	iorwf	main@width+1,w
   229  196  743                	btfss	3,2
   230  197  BA6                	goto	l575
   231  198  666                	btfsc	6,3	;volatile
   232  199  BA4                	goto	l573
   233  19A  BA6                	goto	l575
   234  19B                     l571:	
   235                           ;main3.c: 52: while(GP3) width++;
   236                           
   237  19B  C01                	movlw	1
   238  19C  03C                	movwf	28
   239  19D  07D                	clrf	29
   240  19E  21C                	movf	28,w
   241  19F  1F0                	addwf	main@width,f
   242  1A0  603                	skipnc
   243  1A1  2B1                	incf	main@width+1,f
   244  1A2  21D                	movf	29,w
   245  1A3  1F1                	addwf	main@width+1,f
   246  1A4                     l573:	
   247  1A4  666                	btfsc	6,3	;volatile
   248  1A5  B9B                	goto	l571
   249  1A6                     l575:	
   250                           
   251                           ;main3.c: 53: };
   252                           ;main3.c: 55: if((35 <= max_width)&&(max_width < 240)) {
   253  1A6  213                	movf	main@max_width+1,w
   254  1A7  03F                	movwf	31
   255  1A8  212                	movf	main@max_width,w
   256  1A9  03E                	movwf	30
   257  1AA  21F                	movf	31,w
   258  1AB  F80                	xorlw	128
   259  1AC  03C                	movwf	28
   260  1AD  C80                	movlw	128
   261  1AE  09C                	subwf	28,w
   262  1AF  743                	skipz
   263  1B0  BB3                	goto	u235
   264  1B1  C23                	movlw	35
   265  1B2  09E                	subwf	30,w
   266  1B3                     u235:	
   267  1B3  703                	skipc
   268  1B4  BFC                	goto	l589
   269  1B5  213                	movf	main@max_width+1,w
   270  1B6  03F                	movwf	31
   271  1B7  212                	movf	main@max_width,w
   272  1B8  03E                	movwf	30
   273  1B9  21F                	movf	31,w
   274  1BA  F80                	xorlw	128
   275  1BB  03C                	movwf	28
   276  1BC  C80                	movlw	128
   277  1BD  09C                	subwf	28,w
   278  1BE  743                	skipz
   279  1BF  BC2                	goto	u245
   280  1C0  CF0                	movlw	240
   281  1C1  09E                	subwf	30,w
   282  1C2                     u245:	
   283  1C2  603                	skipnc
   284  1C3  BFC                	goto	l589
   285                           
   286                           ;main3.c: 57: if(abs(ADRES - max_width) > 10) {
   287  1C4  252                	comf	main@max_width,w
   288  1C5  03C                	movwf	28
   289  1C6  253                	comf	main@max_width+1,w
   290  1C7  03D                	movwf	29
   291  1C8  2BC                	incf	28,f
   292  1C9  643                	skipnz
   293  1CA  2BD                	incf	29,f
   294  1CB  208                	movf	8,w	;volatile
   295  1CC  1DC                	addwf	28,w
   296  1CD  029                	movwf	abs@t
   297  1CE  21D                	movf	29,w
   298  1CF  603                	skipnc
   299  1D0  29D                	incf	29,w
   300  1D1  02A                	movwf	abs@t+1
   301  1D2  905                	fcall	entry__abs
   302  1D3  209                	movf	?_abs,w
   303  1D4  03E                	movwf	30
   304  1D5  20A                	movf	?_abs+1,w
   305  1D6  03F                	movwf	31
   306  1D7  21F                	movf	31,w
   307  1D8  F80                	xorlw	128
   308  1D9  03C                	movwf	28
   309  1DA  C80                	movlw	128
   310  1DB  09C                	subwf	28,w
   311  1DC  743                	skipz
   312  1DD  BE0                	goto	u255
   313  1DE  C0B                	movlw	11
   314  1DF  09E                	subwf	30,w
   315  1E0                     u255:	
   316  1E0  703                	skipc
   317  1E1  BF9                	goto	l587
   318                           
   319                           ;main3.c: 59: if(ADRES > max_width) {
   320  1E2  208                	movf	8,w	;volatile
   321  1E3  03C                	movwf	28
   322  1E4  07D                	clrf	29
   323  1E5  213                	movf	main@max_width+1,w
   324  1E6  03F                	movwf	31
   325  1E7  212                	movf	main@max_width,w
   326  1E8  03E                	movwf	30
   327  1E9  21F                	movf	31,w
   328  1EA  F80                	xorlw	128
   329  1EB  02F                	movwf	??_main
   330  1EC  21D                	movf	29,w
   331  1ED  F80                	xorlw	128
   332  1EE  08F                	subwf	??_main,w
   333  1EF  743                	skipz
   334  1F0  BF3                	goto	u265
   335  1F1  21C                	movf	28,w
   336  1F2  09E                	subwf	30,w
   337  1F3                     u265:	
   338  1F3  603                	skipnc
   339  1F4  BF7                	goto	l585
   340                           
   341                           ;main3.c: 60: GP2 = 1; GP1 = 0;
   342  1F5  546                	bsf	6,2	;volatile
   343  1F6  BFD                	goto	L1
   344  1F7                     l585:	
   345                           ;main3.c: 61: } else {
   346                           
   347                           
   348                           ;main3.c: 62: GP2 = 0; GP1 = 1;
   349  1F7  446                	bcf	6,2	;volatile
   350  1F8  BFA                	goto	L2
   351  1F9                     l587:	
   352                           ;main3.c: 63: };
   353                           ;main3.c: 65: } else {GP2 = 1; GP1 = 1;};
   354                           
   355  1F9  546                	bsf	6,2	;volatile
   356  1FA                     L2:	
   357  1FA  526                	bsf	6,1	;volatile
   358                           
   359                           ;main3.c: 67: } else {GP2 = 0; GP1 = 0;};
   360  1FB  B72                	goto	l553
   361  1FC                     l589:	
   362  1FC  446                	bcf	6,2	;volatile
   363  1FD                     L1:	
   364  1FD  426                	bcf	6,1	;volatile
   365  1FE  B72                	goto	l553
   366  1FF                     __end_of_main:	
   367                           
   368                           	psect	text1
   369  12C                     __ptext1:	
   370 ;; *************** function _abs *****************
   371 ;; Defined at:
   372 ;;		line 21 in file "main3.c"
   373 ;; Parameters:    Size  Location     Type
   374 ;;  t               2    0[BANK0 ] int 
   375 ;; Auto vars:     Size  Location     Type
   376 ;;		None
   377 ;; Return value:  Size  Location     Type
   378 ;;                  2    0[BANK0 ] int 
   379 ;; Registers used:
   380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   381 ;; Tracked objects:
   382 ;;		On entry : 0/0
   383 ;;		On exit  : 0/0
   384 ;;		Unchanged: 0/0
   385 ;; Data sizes:     COMMON   BANK0
   386 ;;      Params:         0       2
   387 ;;      Locals:         0       0
   388 ;;      Temps:          0       0
   389 ;;      Totals:         0       2
   390 ;;Total ram usage:        2 bytes
   391 ;; Hardware stack levels used:    1
   392 ;; This function calls:
   393 ;;		Nothing
   394 ;; This function is called by:
   395 ;;		_main
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           
   400                           ;psect for function _abs
   401  12C                     _abs:	
   402                           
   403                           ;main3.c: 22: if(t < 0 ) return -t;
   404  12C  7EA                	btfss	abs@t+1,7
   405  12D  B3A                	goto	l527
   406  12E  249                	comf	abs@t,w
   407  12F  03C                	movwf	28
   408  130  24A                	comf	abs@t+1,w
   409  131  03D                	movwf	29
   410  132  2BC                	incf	28,f
   411  133  643                	skipnz
   412  134  2BD                	incf	29,f
   413  135  21C                	movf	28,w
   414  136  029                	movwf	?_abs
   415  137  21D                	movf	29,w
   416  138  02A                	movwf	?_abs+1
   417  139  800                	retlw	0
   418  13A                     l527:	
   419                           
   420                           ;main3.c: 23: if(t >= 0) return t;
   421  13A  6EA                	btfsc	abs@t+1,7
   422  13B  800                	retlw	0
   423  13C  800                	retlw	0
   424  13D                     __end_of_abs:	
   425                           
   426                           	psect	jmp_tab
   427  005                     __pjmp_tab:	
   428                           ;incstack = 0
   429                           ; Regs used in _abs: [wreg-fsr0h+status,2-btemp+1]
   430                           
   431  005                     entry__abs:	
   432  005  B2C                	ljmp	_abs
   433  006                     entry__Delay_ms:	
   434                           ;incstack = 0
   435                           ; Regs used in _Delay_ms: [wreg-fsr0h+status,2+btemp+0+btemp+1]
   436                           
   437  006  B3D                	ljmp	_Delay_ms
   438                           
   439                           	psect	text2
   440  13D                     __ptext2:	
   441 ;; *************** function _Delay_ms *****************
   442 ;; Defined at:
   443 ;;		line 15 in file "main3.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;  DELAY_CNT       2    0[BANK0 ] unsigned int 
   446 ;; Auto vars:     Size  Location     Type
   447 ;;  i               2    4[BANK0 ] unsigned int 
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    0[BANK0 ] void 
   450 ;; Registers used:
   451 ;;		wreg, fsr0l, fsr0h, status,2, btemp+0, btemp+1
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0
   457 ;;      Params:         0       2
   458 ;;      Locals:         0       2
   459 ;;      Temps:          0       2
   460 ;;      Totals:         0       6
   461 ;;Total ram usage:        6 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _Delay_ms
   472  13D                     _Delay_ms:	
   473                           
   474                           ;main3.c: 16: for (unsigned int i = 0; i < DELAY_CNT; i++) {
   475  13D  06D                	clrf	Delay_ms@i
   476  13E  06E                	clrf	Delay_ms@i+1
   477  13F                     l519:	
   478  13F  20A                	movf	Delay_ms@DELAY_CNT+1,w
   479  140  03D                	movwf	29
   480  141  209                	movf	Delay_ms@DELAY_CNT,w
   481  142  03C                	movwf	28
   482  143  21D                	movf	29,w
   483  144  08E                	subwf	Delay_ms@i+1,w
   484  145  743                	skipz
   485  146  B49                	goto	u145
   486  147  21C                	movf	28,w
   487  148  08D                	subwf	Delay_ms@i,w
   488  149                     u145:	
   489  149  603                	btfsc	3,0
   490  14A  800                	retlw	0
   491                           
   492                           ;main3.c: 17: _delay((unsigned long)((1)*(8000000/4000.0)));
   493  14B  C03                	movlw	3
   494  14C  02C                	movwf	??_Delay_ms+1
   495  14D  C97                	movlw	151
   496  14E  02B                	movwf	??_Delay_ms
   497  14F                     u277:	
   498  14F  2EB                	decfsz	??_Delay_ms,f
   499  150  B4F                	goto	u277
   500  151  2EC                	decfsz	??_Delay_ms+1,f
   501  152  B4F                	goto	u277
   502  153  B54                	nop2
   503  154  C01                	movlw	1
   504  155  03C                	movwf	28
   505  156  07D                	clrf	29
   506  157  21C                	movf	28,w
   507  158  1ED                	addwf	Delay_ms@i,f
   508  159  603                	skipnc
   509  15A  2AE                	incf	Delay_ms@i+1,f
   510  15B  21D                	movf	29,w
   511  15C  1EE                	addwf	Delay_ms@i+1,f
   512  15D  B3F                	goto	l519
   513  15E                     __end_of_Delay_ms:	
   514  001C                     btemp	set	28	;btemp
   515  001C                     wtemp	set	28
   516  001C                     wtemp0	set	28
   517  001E                     wtemp1	set	30
   518  0020                     wtemp2	set	32
   519  0022                     wtemp3	set	34
   520  0024                     wtemp4	set	36
   521  0026                     wtemp5	set	38
   522  001D                     wtemp6	set	29
   523  001C                     ttemp	set	28
   524  001C                     ttemp0	set	28
   525  001F                     ttemp1	set	31
   526  0022                     ttemp2	set	34
   527  0025                     ttemp3	set	37
   528  001D                     ttemp4	set	29
   529  001C                     ltemp	set	28
   530  001C                     ltemp0	set	28
   531  0020                     ltemp1	set	32
   532  0024                     ltemp2	set	36
   533  001E                     ltemp3	set	30


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            21     11      11

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Delay_ms

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     379
                                              6 BANK0      5     5      0
                           _Delay_ms
                                _abs
 ---------------------------------------------------------------------------------
 (1) _abs                                                  2     0      2     131
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Delay_ms                                             6     4      2      89
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay_ms
   _abs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
STACK                0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
DATA                 0      0       0       1        0.0%
BITCOMMON            0      0       0       2        0.0%
BITBANK0            15      0       0       3        0.0%
COMMON               0      0       0       4        0.0%
BANK0               15      B       B       5       52.4%
ABS                  0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Nov  3 00:38:37 2016

            __CFG_CP$OFF 0000                       _GO 0039                       fsr 0004  
                    l519 013F                      l527 013A                      l553 0172  
                    l571 019B                      l563 0192                      l573 01A4  
                    l565 0194                      l575 01A6                      l585 01F7  
                    l587 01F9                      l589 01FC                      _GP1 0031  
                    _GP2 0032                      _GP3 0033                      u145 0149  
                    u235 01B3                      u245 01C2                      u255 01E0  
                    u175 017F                      u265 01F3                      u277 014F  
                    _abs 012C                     ?_abs 0009                     _ADON 0038  
                   _CHS0 003A                     _CHS1 003B                     _ANS0 003E  
                   _ANS1 003F                     abs@t 0009                     _main 015E  
                   btemp 001C                     ltemp 001C                     start 0002  
                   ttemp 001C                     wtemp 001C            __CFG_MCPU$OFF 0000  
                  ??_abs 0000                    ?_main 0009                    _ADRES 0008  
          __CFG_WDTE$OFF 0000                    _nDONE 0039                    ltemp0 001C  
                  ltemp1 0020                    ltemp2 0024                    ltemp3 001E  
                  ttemp0 001C                    ttemp1 001F                    ttemp2 0022  
                  ttemp3 0025                    ttemp4 001D                    status 0003  
                  wtemp0 001C                    wtemp1 001E                    wtemp2 0020  
                  wtemp3 0022                    wtemp4 0024                    wtemp5 0026  
                  wtemp6 001D        Delay_ms@DELAY_CNT 0009         __end_of_Delay_ms 015E  
         __CFG_MCLRE$OFF 0000          __initialization 0003             __end_of_main 01FF  
                 ??_main 000F                   _OPTION 0000            main@max_width 0012  
__end_of__initialization 0003           __pcstackCOMMON 0000                ?_Delay_ms 0009  
             __pmaintext 015E               ??_Delay_ms 000B                  __ptext1 012C  
                __ptext2 013D             __size_of_abs 0011     end_of_initialization 0003  
              Delay_ms@i 000D      start_initialization 0003              __end_of_abs 013D  
       __CFG_IOSCFS$8MHZ 0000        __size_of_Delay_ms 0021           entry__Delay_ms 0006  
              ___latbits 0000            __pcstackBANK0 0009                __pjmp_tab 0005  
               _TRISGPIO 0006                main@width 0010                 _Delay_ms 013D  
              entry__abs 0005            __size_of_main 00A1  
